{"meta":{"title":"JimmyLee 官网","subtitle":"分享有趣的事","description":null,"author":null,"url":"http://yoursite.com"},"pages":[{"title":"About","date":"2018-10-18T08:46:04.315Z","updated":"2016-11-21T07:51:54.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-11-12T02:40:53.679Z","updated":"2016-11-21T10:08:00.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-11-12T02:40:38.030Z","updated":"2016-11-21T10:08:00.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"换个角度思考，升级我们的程序员思维","slug":"换个角度思考，升级你的程序员思维","date":"2019-02-18T12:30:35.000Z","updated":"2019-02-18T09:51:20.590Z","comments":true,"path":"2019/02/18/换个角度思考，升级你的程序员思维/","link":"","permalink":"http://yoursite.com/2019/02/18/换个角度思考，升级你的程序员思维/","excerpt":"","text":"曾经很好奇那些日入上万的 App成功的原因。 觉得肯定是因为代码写的好，所以才这么多人下砸。 看到一个 App成功，第一个想法是用什么语言写的，这个页面怎么实现，有没有用到后台的功能。 现在来看，这就是典型的程序员思维。 技术好，不一定代表产品做的好。如果光写一个应用不做运营和推广的工作，那这个应用就属于个人项目， 而不能称之为一个产品，因为这个应用只是面向开发者的。 而能称之为产品的应用，是面向用户和市场的。一款商业级 App的成功，产品、设计、编程、运营的工作缺一不可。 当一款应用一直稳定在苹果商店的榜单前列，原因可能是 ASO做的好，占据了好多搜索量高的关键词，大家一搜索出来的都是这个App。 一款应用突然下载量暴增，有可能是有外力推荐: 比如媒体推荐、公众号推荐、抖音上突然流行带来大量下载的原因。 所以我们看到抖音在国外大街小巷地铁站上做广告，就是为了获取流量。 互联网时代，酒香也怕箱子深，代码写的再好，别人不知道这个 App也没办法。 当我们看到 App下载量不好时，不应该打开IDE来优化代码，而应该从产品和运营的角度来思考哪里出了问题。 当我们能跳出程序员的思维，来看这个世界，也会发现很多有意思的事。 锤子的子弹短信曾经登顶 App Store下载榜第一，原因就是老罗发布会热度带来的流量，发布会结束后慢慢也就没有声音了。 如果我们从技术的角度思考子弹短信的成功并企图复制，那结果应该并不理想。 如果想做成功的独立开发者，那运营的工作必须会做。会做 ASO、写文章、推广和做视频。 产品经理的工作也要能拿下来，思考产品的核心竞争力，画产品流程图，熟悉 App一些常用的产品套路。 一份工作80%的内容，花20%的时间就能掌握。所以学习掌握产品、运营和设计的技能不是一件特别难的事，只要想做。 做到顶级的水准可能有点难，但做到平均线往上一点的水准，以程序员的学习能力，应该不难","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"从测试萌新到独立开发的成长之路","slug":"从测试萌新到独立开发的成长之路","date":"2019-01-03T09:20:11.000Z","updated":"2019-02-11T07:24:28.162Z","comments":true,"path":"2019/01/03/从测试萌新到独立开发的成长之路/","link":"","permalink":"http://yoursite.com/2019/01/03/从测试萌新到独立开发的成长之路/","excerpt":"","text":"今天随手打开了TesterHome论坛, 想起了三年前自己还是测试萌新时的日子。 从最初的测试工程师，成长为开发测试和开发工程师，再到现在的独立开发者。 一路走来，慢慢有了些收获。 写下这些文字，给曾经迷茫过的我们 希望能给大家的职业规划提供一些参考 3年前还是测试新人时毕业后被内推到了华为下面的公司工作，成为一名测试工程师，被派去了华为南研所 工作不算太辛苦，工资也不低 但大公司里面每个人做的事都是螺丝钉，而且华为的技术不通用，我看到很多前辈10年时间里 就在华为和中兴下面的公司跳来跳去，能选择的路很少。 不想一直做通讯相关的测试，也不想天天加班，想以后有小孩了能晚上回去陪陪小孩 所以工作的第一个月里，定下了目标，要去互联网公司。同时去房价低一点的城市，能安家立业。 当时买了 MacBook，自学编程，准备写一个简单的 iOS App出来去面试新公司 花了3个月时间，第一个简单的App上线了 现在看半天时间能写好的一个 App 拿着这个App 成功找到一份测试开发的工作，也顺利换了城市 开发测试的那段时间在新公司做开发测试的工作，薪水涨了一点。 在这期间围绕 Appium写了一整套的自动化测试系统。 算是入门了开发测试。 TesterHome上的大神给了很多帮助，好多教程这上面的最好。 后面这套系统公司卖给了老外，赚了不少钱。 工作时间长了对测试工作慢慢有了自己的观点 有人认为测试往上走，就是开发测试了: 写UI自动化，接口测试，性能测试，写测试工具 我觉得这种观点不能说错，我见过很多人走这条路，走的都挺好。 但觉得应该更进一步。 移动端测试的目标是一个App，从代码最底层测试一个App的效果应该是最好的。 换句话说，开发人员是最好的测试人员 (自己写的代码哪里不好心里没点数吗 -_-) 所以测试应该慢慢往开发的方向发展。 写一个应用的业务逻辑没有那么复杂，写多了就会了，熟能生巧而已。 成为了一名iOS开发上家公司做开发测试一年时间后，跳槽到一家互联网公司。刚毕业时的愿望达成 ^—^ 在这家公司工作到现在，有两年时间。 当初以测试开发的身份进来的，花了6个月时间把现在公司的 App代码过了两遍，转岗成了一名 iOS工程师 最开始分配的都是些简单的工作，慢慢就上手了 很感谢现在公司遇到的同事和Boss，给了我很多帮助 同是90后的技术总监，写过iOS和Android，现在写C++。做事专注，做人厚道 公司移动端的负责人，会 iOS，Android和PHP，学什么都很快，区块链刚出来的时候很快就上线到 业务上。乐于助人，代码上的问题一般都能解决 他们提高了我对自己的期待，也让我知道了成长的方向 成为独立开发者产品，设计，运营，编程和测试的工作都要独立开发者自己做 平时还是要上班的，回家后做自己的项目 最开始是想多写一点代码，提高的快一点 （写代码够1万个小时，足够成长为大牛了） 在公司只是写某个模块的代码，没有从头完整的写过一个App 写了一个月后上线了自己独立开发的App，反响不错 最好成绩是中国区工具付费榜第20名 培养了自己产品和运营的思维 想到一个好的创意 –&gt; 完成 UI设计 –&gt; 完成编程和测试 –&gt; 日常运营 上面的流程完整的走了一遍 其实大部分工作80%的内容，花20%的时间就能掌握。 开发者有产品和运营思维后，对开发的理解也能更深一点 这期间认识了很多做独立开发的大佬，知道了他们精彩的人生 有做独立开发后融资开公司的 有做独立开发收入让工资变成零花钱的 这让我对生活有了更多的期待,别人可以的 我也可以 看文章的你，也能做到 结束语分享自己走过的路，希望能给看到的你一些信心 这条路有人走过了，如果你想的话，也可以的 做测试对代码保持好奇心，保持学习的习惯 能持续不断的进步 那自己测试的路一定能越走越宽 我是城南花已开 微信 JeremyLee051226，想交流的同学可以加我微信 我可以分享我学习的资料，好的自学编程的网站，好的开源代码给你 愿 TesterHome 上的同学变得越来越好","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"开发","slug":"开发","permalink":"http://yoursite.com/tags/开发/"}]},{"title":"iOS面试之道 - 读书笔记","slug":"iOS面试之道","date":"2018-12-03T06:38:11.000Z","updated":"2018-12-03T07:35:03.063Z","comments":true,"path":"2018/12/03/iOS面试之道/","link":"","permalink":"http://yoursite.com/2018/12/03/iOS面试之道/","excerpt":"","text":"iOS面试之道是在小专栏这个网站上看到的，比较流行的一本关于 iOS面试的书。读这本书的目的在于了解下当下最新的 iOS面试的信息，同时通过面试题，来回顾整理下 iOS编程的基础知识。毕竟问的比较多的面试题，一般都比较经典，弄懂了平时工作中提升也比较快。 同时养成看书的习惯，在知识碎片化的时代，系统的学习知识效率反而是最高的。 这篇文章记录了我读这本书的一些感想，笔记和重点的整理。首先看的是第二部分的算法和第三部分的 iOS专业问答。第一部分的面试准备这一章，以后换工作的时候再看。 1.基本的数据结构数组 数组是最基本的数据结构。Swift中的 Array数组的实现方式有三种: ContiguousArray, Array和 ArraySlice。 数组的一些基本应用: // 声明一个不可修改的数组 let nums = [1, 2, 3] let nums = [Int](repeating: 0, count: 5) // 声明一个可以修改的数组 var nums = [3, 1, 2] // 增加一个元素 nums.append(4) // 对原数组进行升序排序 nums.sort() // 对原数组进行降序排序 nums.sort(by: &gt;) // 将原数组除了最后一个以外的所有元素赋值给另一个数组 let anotherNums = Array(nums[0 ..&lt; nums.count - 1]) 用数组实现栈: // 用数组实现栈 class Stack { var stack: [AnyObject] var isEmpty: Bool { return stack.isEmpty } var peek: AnyObject? { return stack.last } init() { stack = [AnyObject]() } func push(object: AnyObject) { stack.append(object) } func pop() -&gt; AnyObject? { if (!isEmpty) { return stack.removeLast() } else { return nil } } } 字典和集合 let primeNums: Set = [3, 5, 7, 11, 13] let oddNums: Set = [1, 3, 5, 7, 9] // 交集、并集、差集 let primeAndOddNum = primeNums.intersection(oddNums) let primeOrOddNum = primeNums.union(oddNums) let oddNotPrimNum = oddNums.subtracting(primeNums) // 用字典和高阶函数计算字符串中每个字符的出现频率，结果 [“h”:1, “e”:1, “l”:2, “o”:1] Dictionary(&quot;hello&quot;.map { ($0, 1) }, uniquingKeysWith: +) 字符串 Swift中的字符串是值类型而不是引用类型 // 字符串和数字之间的转换 let str = &quot;3&quot; let num = Int(str) let number = 3 let string = String(num) // 字符串长度 let len = str.count // 访问字符串中的单个字符，时间复杂度为O(1) let char = str[str.index(str.startIndex, offsetBy: n)] // 修改字符串 str.remove(at: n) str.append(&quot;c&quot;) str += &quot;hello world&quot; // 检测字符串是否是由数字构成 func isStrNum(str: String) -&gt; Bool { return Int(str) != nil } // 将字符串按字母排序(不考虑大小写) func sortStr(str: String) -&gt; String { return String(str.sorted()) }","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://yoursite.com/categories/读书笔记/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"读书","slug":"读书","permalink":"http://yoursite.com/tags/读书/"}]},{"title":"小专栏App架构 - 读书笔记","slug":"读书笔记","date":"2018-11-20T03:13:11.000Z","updated":"2018-12-03T06:41:58.000Z","comments":true,"path":"2018/11/20/读书笔记/","link":"","permalink":"http://yoursite.com/2018/11/20/读书笔记/","excerpt":"","text":"1.交互逻辑: view action 转变为 model action的操作，我们一般称为交互逻辑2.表现逻辑: 将 model 的通知和数据转变为 view更改的操作，称为表现逻辑3.键值观察(KVO): 可以将某个对象上属性的改变通知给另外一个对象4.响应式编程可以理解为: 建立了一个动态的数据流关系(当 b或者 c的值发生变化时,a的值自动发生变化)a ＝ b ＋ c赋值之后 b 或者 c 的值变化后，a 的值不会跟着变化响应式编程，目标就是，如果 b 或者 c 的数值发生变化，a 的数值会同时发生变化 5.常用的两种 App设计模式: MVC(Model-View-Controller) 和 MVVM(Model-View-ViewModel-协调器)。（都是基于场景进行的架构）MVC: 第二种是将 Controller里的负责 view-model(视图模型)的 Controller和管理其它 view controller 的 Controller 单独区分开来，本质上是MVC模式的细分版本。 MVVM: 在 MVC中 view controller的角色由 View层级的一部分和协调 view和 model之间的交互，减少到了只是 view层级的一部分。view controller 不需要负责处理展示其它的 view controller，协调器(coordinate) 来进行 view controller层级的管理。 注：View-Model 实际扮演的是类似 Controller的角色, 是 Controller的一个子集。负责 View页面对应的那部分 Controller的功能，MVVM中在每个场景中使用 view-model来描述场景中的表现逻辑和交互逻辑。View-Model为每个 view获取和准备数据。 6.MVC中最常见的两个问题:失效的观察者模式和臃肿的 ViewController7.Model-View-ViewModel + 协调器 (MVVM) 是一种基于 MVC进行改进的模式,它将所有 Model相关的任务(更新 model,观察变更,将 model显示出来)从 Controller层抽离出来，放到view-model这一层中。8.Model层持有网络比 Controller层持有网络更好，数据更容易被共享。","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://yoursite.com/categories/读书笔记/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"读书","slug":"读书","permalink":"http://yoursite.com/tags/读书/"}]},{"title":"推荐我在Mac上常用的软件和网站","slug":"推荐我在Mac上常用的软件和网站","date":"2018-11-16T08:58:17.000Z","updated":"2018-11-16T09:37:25.000Z","comments":true,"path":"2018/11/16/推荐我在Mac上常用的软件和网站/","link":"","permalink":"http://yoursite.com/2018/11/16/推荐我在Mac上常用的软件和网站/","excerpt":"","text":"上个周末入手了一台新的 iMac，花了半天时间把自己常用的软件装了上去，正好趁这个机会写一篇关于Mac常用软件分享的文章，希望对大家能有所帮助。 生活类软件：1.Flux 保护视力的一个App，能自动调节屏幕的亮度和色彩，用了很多年。平时打开，关闭这个App的时候眼睛感觉挺明显。 2.Pap.er 一款壁纸App，里面的壁纸挺漂亮。交互也比较简单，是我用过的几款相似软件中比较出众的。 3.iTranslate 一款比较好用的翻译App。推荐它的原因是在Mac顶部状态栏里打开就能用，平时遇到单词可以顺手查一下，比单独打开谷歌翻译的速度要快一点。 4.印象笔记 Evernote 每天都会用到的App，有什么想法和灵感都会记录在这上面。养成每日记录和写文字的习惯，支持 iPhone和 Mac上的内容同步。 5.Things3 一款To-Do类应用，非常推荐。每天早上都会想好今天每个时间段做什么事情，并在上面记录下来，晚上的时候给完成的事打勾，可以让我们每天过的明白一点，知道什么时候做什么事情。 6.YoMail 一款好用的邮件客户端，比开网页邮件端要好。 7.Google Chrome Canary 谷歌浏览器的开发版本，用起来比普通版本的感觉要好。之前用了很长时间Mac自带的浏览器Safari，现在在用这个浏览器。两个各有优点，更推荐Google Chrome Canary。 8. QQ &amp; 微信 必备的App。 9.SpechtLite 这个可以自己搜索了解一下。 10.Dr Cleaner 好用的免费Mac清理软件，平时使用足够了。（收费版的CleanMyMac之前有一次把电脑清崩溃了…） 开发类软件：1.Xcode 用 Xcode和 Android Studio来开发 iOS和 Android应用，总感觉 Xcode用起来更优雅一点。 2.Android Studio 开发Android App首选。 3.iTerm 比 Mac自带的终端更好用。 4.SourceTree Git 的客户端管理工具，属于开发必备的工具，代码管理的神器。 5.图标构建 很好用的Appicon 自动生成所有分辨率类型的App，开发必备。","categories":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/categories/生活/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"RosJava环境搭建","slug":"ROSJava环境搭建","date":"2018-11-12T08:42:25.000Z","updated":"2018-11-12T11:27:05.097Z","comments":true,"path":"2018/11/12/ROSJava环境搭建/","link":"","permalink":"http://yoursite.com/2018/11/12/ROSJava环境搭建/","excerpt":"","text":"ROS (Robot Operating System) 是在2010年发布的开源机器人操作系统。 RosJava 是用 Java实现的 ROS，它提供了一个客户端库用于快速调用 ROS的 Topics, Services 和Parameters，我们可以用它在 Android 上进行 RosJava的开发。 资料分享: Ros官网: http://wiki.ros.org/ RosJava官方文档: http://wiki.ros.org/rosjava 1.ROS环境搭建ROS Kinetic支持 Xenial (16.04)和 Wily(15.10)，其它 Linux 系统需要安装其它的 ROS版本。下面开始在 Ubuntu 16.0.4上搭建 ROS Kinetic开发环境。 参考资料: http://wiki.ros.org/kinetic http://wiki.ros.org/kinetic/Installation/Ubuntu 使用下面命令：~$ sudo sh -c &apos;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&apos; 2.2 设置keys ~$ sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 0xB01FA116 2.3 安装 ~$ sudo apt-get update ~$ sudo apt-get install ros-kinetic-desktop-full 安装功能包： ~$ sudo apt-get install ros-kinetic-slam-gmapping 查找在kinetic中可以使用的功能包： ~$ apt-cache search ros-kinetic 2.4 初始化 ~$ sudo rosdep init ~$ rosdep update 2.5 环境配置 ~$ echo &quot;source /opt/ros/kinetic/setup.bash&quot; &gt;&gt; ~/.bashrc ~$ source ~/.bashrc 注意当安装多个ROS发行版，使用kinetic需要用到下面命令： ~$ source /opt/ros/kinetic/setup.bash 2.6 安装rosinstall ~$ sudo apt-get install python-rosinstall 2.7 测试roscore ~$ roscore 安装ROS成功后,在Beginner Tutorials中有一个简单的示例程序. 在Terminal中运行以下命令： $ roscore 新开一个terminal，运行以下命令，打开小乌龟窗口： $ rosrun turtlesim turtlesim_node 新开一个terminal，运行以下命令，打开乌龟控制窗口，可使用方向键控制乌龟运动： $ rosrun turtlesim turtle_teleop_key 选中控制窗口，按方向键，可看到小乌龟窗口中乌龟在运动。新开一个terminal，运行以下命令，可以看到ROS的图形化界面，展示结点的关系： $ rosrun rqt_graph rqt_graph 至此，测试完成，ROS成功 2.RosJava环境搭建 在 Ros环境搭建完成后搭建 RosJava 环境。 参考资料: http://wiki.ros.org/rosjava/Tutorials/kinetic/Source%20Installation https://blog.csdn.net/F_season/article/details/9166133 使用下面命令：1.安装依赖$ sudo apt-get install ros-kinetic-catkin ros-kinetic-rospack python-wstool openjdk-8-jdk 2.核心功能$ mkdir -p ~/rosjava/src$ wstool init -j4 ~/rosjava/src https://raw.githubusercontent.com/rosjava/rosjava/kinetic/rosjava.rosinstall$ source /opt/ros/kinetic/setup.bash$ cd ~/rosjava$ rosdep update$ rosdep install –from-paths src -i -y$ catkin_make 3.配置 .bashrc文件在.bashrc 文件里设置 Ros的环境变量，不设置的话 ROS和 RosJava Android间的通讯不能连通。 Linux系统里打开终端，输入命令:$ gedit ~/.bashrc 在最后一行添加三个 export语句export ROS_HOSTNAME=192.168.199.141export ROS_IP=192.168.199.141export ROS_MASTER_URL=http://192.168.199.141:11311 把IP地址改成自己本机连接网络的IP地址，之后手机和安装Linux的ROS系统需要连接在同一个网络 3.在 Android中使用ROS在Mac上搭建好 Android开发环境，安装好Android Studio，配置好翻墙网络。通过给Android App添加上ROS的依赖库，可以在没有ROS环境的Mac上开发ROS客户端。 参考资料:http://community.bwbot.org/topic/627/%E5%9C%A8android%E4%B8%AD%E4%BD%BF%E7%94%A8ros 1.创建一个 Android App项目 然后点击Finish 等待项目同步完成。一般这里出问题就是网络没有配置好，需要开翻墙软件。 2.修改 build.gradle文件 项目同步完成之后，在项目左侧的文件列表内会有两个build.gradle文件。其中一个是Project的，另一个是Module的。 首先修改Project的build.gradle文件 把文件中的 buildscript { repositories { jcenter() } dependencies { classpath ‘com.android.tools.build:gradle:2.2.3’ // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files } }修改为 buildscript { apply from: “https://github.com/rosjava/android_core/raw/kinetic/buildscript.gradle&quot;}然后在文件中添加 subprojects { apply plugin: ‘ros-android’Do not place your applica afterEvaluate { project -&gt; android { // Exclude a few files that are duplicated across our dependencies and // prevent packaging Android applications. packagingOptions { exclude “META-INF/LICENSE.txt” exclude “META-INF/NOTICE.txt” } } }}然后修改Module的build.gradle，在dependencies 中添加ros依赖 …dependencies { … // You now now add any rosjava dependencies, like so: compile ‘org.ros.android_core:android_10:[0.3,0.4)’}…同时把dependencies 中的 全部implementation修改为compile。注意修改时的大小写。 把文件中的compileSdkVersion版本设置为25targetSdkVersion也设置为25把 com.android.support:appcompat-v7:27.1.1也修改成25的版本 最后修改完成的文件如下面所示 apply plugin: ‘com.android.application’ android { compileSdkVersion 25 defaultConfig { applicationId “org.bwbot.rostest” minSdkVersion 15 targetSdkVersion 25 versionCode 1 versionName “1.0” testInstrumentationRunner “android.support.test.runner.AndroidJUnitRunner” } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile(‘proguard-android.txt’), ‘proguard-rules.pro’ } }} dependencies { compile fileTree(dir: ‘libs’, include: [‘*.jar’]) compile ‘com.android.support:appcompat-v7:25.4.0’ compile ‘com.android.support.constraint:constraint-layout:1.1.3’ testCompile ‘junit:junit:4.12’ androidTestCompile ‘com.android.support.test:runner:1.0.2’ androidTestCompile ‘com.android.support.test.espresso:espresso-core:3.0.2’ compile ‘org.ros.android_core:android_10:[0.3,0.4)’} 3.修改AndroidManifest.xml文件此时如果编译项目会出现下面的错误 Manifest merger failed : Attribute application@icon value=(@mipmap/ic_launcher) from AndroidManifest.xml:7:9-43 is also present at [org.ros.android_core:android_10:0.3.3] AndroidManifest.xml:19:9-36 value=(@mipmap/icon). Suggestion: add ‘tools:replace=”android:icon”‘ to element at AndroidManifest.xml:5:5-19:19 to override.此时需要修改AndroidManifest.xml文件在application项目中做如下修改 &lt;application xmlns:tools=”http://schemas.android.com/tools&quot; tools:replace=”android:icon” …为了能够正常使用还需要给app添加网络权限。在AndroidManifest.xml文件中添加 最后的AndroidManifest.xml文件如下 &lt;?xml version=”1.0” encoding=”utf-8”?&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt; 此时项目已经可以成功编译了。 写一个简单的消息发布程序MainActivity.java内容如下 package org.bwbot.rostest; import android.support.v7.app.AppCompatActivity;import android.os.Bundle; import org.ros.android.RosActivity;import org.ros.concurrent.CancellableLoop;import org.ros.namespace.GraphName;import org.ros.node.ConnectedNode;import org.ros.node.Node;import org.ros.node.NodeConfiguration;import org.ros.node.NodeMain;import org.ros.node.NodeMainExecutor;import org.ros.node.topic.Publisher; import java.net.URI; import std_msgs.String; public class MainActivity extends RosActivity { protected MainActivity() { super(&quot;ros_test&quot;, &quot;ros_test&quot;, URI.create(&quot;http://192.168.0.23:11311&quot;)); // 这里是ROS_MASTER_URI } @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); } @Override protected void init(NodeMainExecutor nodeMainExecutor) { NodeConfiguration nodeConfiguration = NodeConfiguration.newPublic(getRosHostname()); nodeConfiguration.setMasterUri(getMasterUri()); nodeMainExecutor.execute(new NodeMain() { @Override public GraphName getDefaultNodeName() { return GraphName.of(&quot;ros_test&quot;); } @Override public void onStart(ConnectedNode connectedNode) { final Publisher&lt;std_msgs.String&gt; pub = connectedNode.newPublisher(&quot;/test&quot;, String._TYPE); connectedNode.executeCancellableLoop(new CancellableLoop() { @Override protected void loop() throws InterruptedException { std_msgs.String msg = pub.newMessage(); msg.setData(&quot;hello world&quot;); pub.publish(msg); Thread.sleep(1000); } }); } @Override public void onShutdown(Node node) { } @Override public void onShutdownComplete(Node node) { } @Override public void onError(Node node, Throwable throwable) { } }, nodeConfiguration); } } 编译后，在手机上运行App，在运行的ROS的主机上打印/test话题。 手机要和Linux机器连接在同一个 Wi-Fi下，Linux上已修改 .bashrc文件，添加本机 IP。Android程序中已配置ROS_MASTER_URL 地址。 在 Linux 上新开一个 Terminal中运行以下命令：$ roscore新开一个terminal，cd 到 rosjava文件夹中，运行命令:$ ros topic echo /test 可以看到消息已经成功发送出来了。到这Anroid端和Linux端的ROS通讯成功。","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"Some feature of Objective-C","slug":"SomefeatureofObjective-C","date":"2018-08-12T13:46:25.000Z","updated":"2018-11-12T11:35:20.000Z","comments":true,"path":"2018/08/12/SomefeatureofObjective-C/","link":"","permalink":"http://yoursite.com/2018/08/12/SomefeatureofObjective-C/","excerpt":"","text":"1.AppDelegate.h and AppDelegate.mWhen the application is created there are AppDelegate.h files and AppDelegate.m files by default. AppDelegateis a proxy for the whole application, it provides a monitoring interface to setting the program when it’s in the start, background, exit and active. 2.Class methods and instance methodsThere are two types of methods in Objective-C: class methods and instance methods. Like “ - (void) setnumber: (int) n; “ that begin with symbol “-“ means that themethod is an instance methods. Instance methods are some of the operations performed on a particular instance of a class. For example, there is a white rabbit, it’s weight has increasted. We can define a instanse methods of weught to reflect the weight change of the white rabbit. Class methods are some of the operations performed on the class itself. For example, we create a new calss, this method is class methods.","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"Android 入门教程","slug":"入门教程","date":"2018-07-23T10:32:46.000Z","updated":"2018-11-12T11:35:13.000Z","comments":true,"path":"2018/07/23/入门教程/","link":"","permalink":"http://yoursite.com/2018/07/23/入门教程/","excerpt":"","text":"这篇文章总结了我在学习 Android过程中获得的经验、资源和代码。用这篇文章作为 Android学习结束的技术文档，自己总结一遍的同时，希望能帮到看这篇文档的人。 1.基础知识入门这里首推谷歌的开发者文档，其中部分文档已经有中文版的，读起来很方便。https://developer.android.com/guide/ 也有中文版的 Android官方培训课程，可以对照着谷歌的文档一起看。http://hukai.me/android-training-course-in-chinese/index.html 看官方文档推荐挑着看，如可以先读1.1 建立第一个App ；1.2添加ActionBar；1.4管理Activity的生命周期；1.5 使用Fragment建立动态UI；1.6数据保存；1.7与其它应用的交互等基础这些基础章节的内容看完后，整个Android App的运行机制大概就有了解了，剩下几个大章的文档就是各种细节的实现。等需要做哪部分功能的时候，再看相应的文档。 其它的一些资源推荐：a. 开发Android用的 Java文档http://www.runoob.com/java/java-methods.html现在Android开发可以使用 Java和 Kotlin，考虑到Java使用的广泛性，推荐使用Java来入门Android和开发公司的App，Kotlin可以之后开发个人App的时候使用。 b.Android Fragment使用详解https://juejin.im/post/5a926630f265da4e8c45264e通过这篇文章可以了解下 Fragment和它的生命周期内容 c.Android 的 mvp分层架构http://www.androidchina.net/8195.html了解下 Android的mvp架构，先有个印象。 d.Android的按键消息分发机制https://www.jianshu.com/p/0c80cdb37af8通过这篇文章可以了解Android的按键消息分发机制，了解App在按键过程中的运行流程。 e.记7月份Android面试感想https://juejin.im/post/5b67ca1c518825625529b2fb常见的Android面试题，面试中能问到的Android问题都是比较经典的，通过面试的问题来学习Android 中一些重要的知识点。 说明：在上面分享 Android基础知识的资源，官方文档挑着看完之后就应该写代码了，首先根据官方文档先写出一个简单的App，之后再写稍微复杂一点的App。其它推荐的资源是边写代码有疑问的时候看的。不要等全部资料看完了再写代码，需要注意这个顺序。 注意:上面的一些教程默认是翻墙的环境，并安装好了 Android Studio 同步Android Studio过程中的大部分问题都与网络有关，搞定网络问题(翻墙)就解决了一大半问题。 关于Android Studio的资料：http://wiki.jikexueyuan.com/project/android-studio-guide/ 2.Android代码实践完成了上面的基础教程，下一步就准备写代码。(看别人的源码理解太浅，要自己写才能发现实际的问题） 这里给出一个实际的很简单的需求： 新开封的盒装牛奶和放在咖啡机里的牛奶容易过期，现在做一个Android App来记录开牛奶和往咖啡机里加牛奶的时间，并显示当前的日期，能让看的人知道当前的牛奶是否过期了。 分析：1.需要两个Button，点击后可以再两个对应的Label上显示当前的日期和时间，精确到秒。2.还有一个Label来显示当前的实时时间。3.UI自己设计，能做的美观大方最好。 通过分享可以知道这是一个很简单的AndroidA pp，尝试自己来完成。 这里有开源的App，可以参考着写：http://gitlab.mynt.com/NanJun/MilkCoffee","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"Vysor破解过程记录","slug":"Vysor破解过程记录","date":"2018-05-12T11:26:21.000Z","updated":"2018-12-03T07:16:22.468Z","comments":true,"path":"2018/05/12/Vysor破解过程记录/","link":"","permalink":"http://yoursite.com/2018/05/12/Vysor破解过程记录/","excerpt":"","text":"最近需要用到到 Vysor，走 Hacker的路线准备破解。大家有能力请支持正版软件。 1.首先要有 Chrome浏览器 &amp;&amp; 这是 Mac下的破解记录 2.打开 https://www.crx4chrome.com/crx/109271/ 下载 Vysor的历史版本 1.9.3 3.下载下来的是 crx格式的文件，把它从下载文件夹移动到另外放文件的地方。 后缀改成 .zip格式，再解压下来成文件夹的格式 4.Chrome浏览器打开输入 chrome://extensions/ 回车，打开开发者选项。选择 加载已解压的扩展程序，将刚才解压的文件夹加载进来。 5.\b打开 Vysor文件夹，搜索 uglify.js 文件。打开复制内容。打开 JS格式化代码网站 http://tool.oschina.net/codeformat/js，复制代码转换，将转换好的代码复制进 uglify.js 文件。 6.搜索 Account Management 关键词，将上面两行代码改成这样： 7.搜索关键词 e.contentWindow._lm，将下面一行代码改成这样 8.找到manifest.json这个文件 &quot;version&quot;: &quot;1.7.2&quot; 改为 &quot;version&quot;: &quot;99&quot; 9.保存文件，Chrome里重启扩展程序。Launchpad里打开 Vysor发现已经变成专业版了。","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"Hacker","slug":"Hacker","permalink":"http://yoursite.com/tags/Hacker/"}]},{"title":"What is unittest and how to write unit testing","slug":"Unittest","date":"2016-05-29T13:32:46.000Z","updated":"2018-11-12T11:24:00.000Z","comments":true,"path":"2016/05/29/Unittest/","link":"","permalink":"http://yoursite.com/2016/05/29/Unittest/","excerpt":"Unit test is used for a module, a function or a class to test their validity.We can write some test case for function abs() to test the validity of it: 1.Input a positive number: 1, 3.2 or 0.6. We expect the return value to be the same as the input. 2.Input a negative number: -1, -2,3 or -0.99. We expect the return value to be the opposite of the input. 3.Input 0. We expect to return 0.","text":"Unit test is used for a module, a function or a class to test their validity.We can write some test case for function abs() to test the validity of it: 1.Input a positive number: 1, 3.2 or 0.6. We expect the return value to be the same as the input. 2.Input a negative number: -1, -2,3 or -0.99. We expect the return value to be the opposite of the input. 3.Input 0. We expect to return 0. 4.Input non-numeric types, such as None, [], {}. We expect a TypeError to be thrown. We put the above test cases into a test module, it’s a complete unit test.If the unit test can be passed, which means that we tested this function to work properly.If the unit test does not pass, either the function has a bug, or the test condition is not entered correctly, we need fixes it to make unit tests pass. What are the benefits of unit testing? Imagine if we modified the abs () source code, we only need to run the unit tests again, if the test passed it means our changes to the abs () function does not affect the original behavior. If the test does not pass, it means that our changes have problems, we need to modify the code or modify the test. Next, we actually write code to illustrate the unit test. abs.pydef abs(x): if not isinstance(x, (int, float)): raise TypeError(&apos;bad operand type&apos;) if x &gt;= 0: return x else: return -x This is a python file, which defines an abs () function that takes an absolute value. Open Terminal, cd into the folder where the abs.py file is located. Input python and press Enter to enter python’s interactive programming environment： $ cd /Users/hisoft/Desktop/Unittest $ python Python 2.7.11 (default, Jan 22 2016, 08:29:18) [GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information. Now imput the ‘import abs’ on the Termanal and press to enters the module name abs there.We use abs.abs (-5) to invoking the function in the module to find the absolute value of -5.This part of the python can refer to the official documents. &gt;&gt;&gt; import abs &gt;&gt;&gt; abs.abs(-5) 5 abs_test.pyNow let’s write the unit test for the abs function. We use the Python’s unittest module, abs_test.py is like this: import unittest from abs import abs class UnitTestDemo(unittest.TestCase): def setup(self): print(&apos;setUp...&apos;) def tearDown(self): print (&apos;tearDoen...&apos;) def test_case1(self): self.assertEqual(abs(1), 1) self.assertEqual(abs(-1), 1) self.assertEqual(abs(0), 0) def test_case2(self): with self.assertRaises(TypeError): abs(&apos;1&apos;) if __name__ == &apos;__main__&apos;: unittest.main() We need to write a test class When we write unit tests, This is inherited from ‘unittest.TestCase’.The test method begins with test, There are test_case1 and test_case2. A method that does not start with test is not considered a test method and will not be executed when tested. ##Run the unit testNow we can run unit tests. To the end of the abs_test.py with two lines of code： if __name__ == &apos;__main__&apos;: unittest.main() The two lines of code means that this script has been completed，we can run it directly： python abs_test.py There are two methods in the unit test script setUp() and tearDown(), They will invoking before and after each test method execute.","categories":[{"name":"开发","slug":"开发","permalink":"http://yoursite.com/categories/开发/"}],"tags":[{"name":"原创","slug":"原创","permalink":"http://yoursite.com/tags/原创/"},{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]}]}