{"meta":{"title":"南君的博客","subtitle":null,"description":null,"author":"南君","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2018-10-18T07:54:57.143Z","updated":"2016-11-21T07:51:54.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-10-18T07:54:57.193Z","updated":"2016-11-21T10:08:00.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-10-18T07:54:57.182Z","updated":"2016-11-21T10:08:00.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Some feature of Objective-C","slug":"SomefeatureofObjective-C","date":"2016-08-12T13:46:25.000Z","updated":"2017-03-06T01:30:52.000Z","comments":true,"path":"2016/08/12/SomefeatureofObjective-C/","link":"","permalink":"http://yoursite.com/2016/08/12/SomefeatureofObjective-C/","excerpt":"","text":"##1.AppDelegate.h and AppDelegate.mWhen the application is created there are AppDelegate.h files and AppDelegate.m files by default. AppDelegateis a proxy for the whole application, it provides a monitoring interface to setting the program when it’s in the start, background, exit and active. ##2.Class methods and instance methodsThere are two types of methods in Objective-C: class methods and instance methods. Like “ - (void) setnumber: (int) n; “ that begin with symbol “-“ means that themethod is an instance methods. Instance methods are some of the operations performed on a particular instance of a class. For example, there is a white rabbit, it’s weight has increasted. We can define a instanse methods of weught to reflect the weight change of the white rabbit. Class methods are some of the operations performed on the class itself. For example, we create a new calss, this method is class methods.","categories":[],"tags":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"},{"name":"Original","slug":"Original","permalink":"http://yoursite.com/tags/Original/"}]},{"title":"Some algorithms of iOS","slug":"SomeAlgorithmsOfiOS","date":"2016-07-30T13:46:25.000Z","updated":"2017-03-06T01:34:11.000Z","comments":true,"path":"2016/07/30/SomeAlgorithmsOfiOS/","link":"","permalink":"http://yoursite.com/2016/07/30/SomeAlgorithmsOfiOS/","excerpt":"This article to share some common algorithms used in iOS, Let’s take a look for it! ##1.Sorting the following set of data in descending order(Bubble Sort) “23, 16, 84, 12, 8, 54, 75, 44, 4, 62”","text":"This article to share some common algorithms used in iOS, Let’s take a look for it! ##1.Sorting the following set of data in descending order(Bubble Sort) “23, 16, 84, 12, 8, 54, 75, 44, 4, 62” 1234567891011121314151617181920212223int main(int argc, char *argv[]) &#123; int array[10] = &#123;23, 16, 84, 12, 8, 54, 75, 44, 4, 62&#125;; int num = sizeof(array)/sizeof(int); for (int i = 0; i &lt; num-1; i++) &#123; for (int j = 0; j &lt; num - 1 -i; j++) &#123; if (array[j] &lt; array[j+1]) &#123; int tmp = array[j]; array[j] = array[j+1]; array[j+1] = tmp; &#125; &#125; &#125; for (int i = 0; i &lt; num; i++) &#123; printf(\"%d\",array[i]); if(i == num-1) &#123; printf(\"\\n\"); &#125; else &#123; printf(\" \"); &#125; &#125;&#125; Bubble sorting is a basic sorting algorithm. This algorithm will repeat the comparison of two adjacent elements in the array, if one element is larger (smaller) than the other, then the position of the two elements is exchanged. This comparison is repeated until the last element, this comparison will repeat n-1 trips, Each trip is compared n-j times, j is the number of elements that have been sorted. Each comparison finds the largest or smallest number of the unsorted elements, this is like a bubble floating from the bottom of the water one by one the same. Bubble sorting is a sorting method with high time complexity and low efficiency, the space complexity is O(n). ##2.Sorting the following set of data in ascending order(Select Sort). “85, 36, 55, 28, 91, 72, 14, 62, 29, 7”123456789101112131415161718192021222324252627void sort(int a[],int n)&#123; int i, j, index; for (i=0;i&lt;n-1;i++) &#123; index = i; for (j=i+1; j&lt;n; j++) &#123; if (a[index]&gt;a[j]) &#123; index=j; &#125; &#125; if(index != i) &#123; int temp = a[i]; a[i] = a[index]; a[index] = temp; &#125; &#125;&#125;int main(int argc, const char * argv[]) &#123; int numArr[10] = &#123;85, 36, 55, 28, 91, 72, 14, 62, 29, 7&#125;; sort(numArr, 10); for (int i=0; i &lt; 10; i++) &#123; printf(\"%d, \", numArr[i]); &#125; printf(\"\\n\"); return 0;&#125; ##3.Fast sorting algorithm123456789101112131415161718192021void sort(int *a, int left, int right) &#123; if (left &gt;= right) &#123; return ;&#125;int i = left;int j = right;int key = a[left];while (i &lt; j) &#123; while (i &lt; j &amp;&amp; key &gt;= a[j]) &#123; j --;&#125;a[i] = a[j];while (i &lt; j &amp;&amp; key &lt;= a[i]) &#123; i++;&#125;a[j] =a[i];&#125;a[i] = key;sort(a, left, i-1);sort(a, i+1, right);&#125; Quick sorting is an improvement in bubble sorting. Use bubble sort once to get the maximum value, if we select a value first, and then scan the sequence waiting to be sorted, a record smaller than this value and a record larger than that value are split into two separate sequences, and then the two sequences are respectively sorted by bubbling, this is quick sorting. We call the selected value as the hub value, If the hub value is the maximum value in the sequence, then this trip quickly sorted become a bubble sort. ##4.Dichotomy searchThe dichotomy search only applies to the sorted sequence. If there is an array V has been arranged in ascending order, there are n = 20 elements in array V. There is an element X in the array V, how to know the location of X in the array V ? We can use dichotomy search to solve this question:12345678910111213141516int binsearch(int x, int v[], int n) &#123; int low, hight, mid; low = 0; high = n-1;while(low &lt;= high)&#123; mid = (low &lt;= high)/2; if (x &lt; v[mid]) high = mid - 1; else if (x &gt; v[mid]) low = mid +1; else return mid;print (\"mid = %d, low = %d, high = %d\\n\", mid, low, high);&#125; return -1;&#125; Our idea is simple: The input value x is first compared to the middle element of the array v, if x is less than the middle element, the high value is set to the intermediate element - 1. Similarly, if x is more than the middle element, the low value is set to the middle element + 1. And then between low and high to find ##5.How to achieve flip-linked list(List in reverse order)?Ideas: Put the second element at the top each time1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;type def struct NODE &#123; int num;&#125;node *createLinkList (int length) &#123; if (length &lt;= 0) &#123; return NULL; &#125; node *head, *p, *q; int number = 1; head = (node *)malloc(sezeof(node)); head -&gt; next = head; p = q = head; while (++number &lt;= length) &#123; p = (node *)malloc(sizeof(node)); p -&gt; num = number; p -&gt; next = NULL; q -&gt; next = p; q = p; &#125; return head;&#125;void printLinkList(node *head) &#123; if (head == NULL) &#123; return; &#125; node *p = head; while (p) &#123; print(\"%d\", p-&gt;num); p = p -&gt; next; &#125; printf(\"\\n\")&#125;node *reverseFunc1(node *head) &#123; if (head == NULL) &#123; return head; &#125; node *p, *q; p = head; q = NULL; while (p) &#123; node *pNext = p -&gt; next; p -&gt; next = q; q = p; p = pNext; &#125; return q;&#125;int main (int argc, const char * argv[]) &#123; node *head = createLinkList(7); if (head) &#123; printLinkList(head); node *reHead = reverseFunc1(head); printLinkList(reHaed); &#125; free(reHead); free(head); return 0;&#125;","categories":[],"tags":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"},{"name":"Original","slug":"Original","permalink":"http://yoursite.com/tags/Original/"}]},{"title":"Use Jenkins On Mac","slug":"UseJenkinsOnMac","date":"2016-07-23T13:46:25.000Z","updated":"2017-03-06T01:35:36.000Z","comments":true,"path":"2016/07/23/UseJenkinsOnMac/","link":"","permalink":"http://yoursite.com/2016/07/23/UseJenkinsOnMac/","excerpt":"##This page is a landing page for those who have installed Jenkins via its OS X installer. The installer sets up Jenkins as a launch daemon, listening on port 8080.","text":"##This page is a landing page for those who have installed Jenkins via its OS X installer. The installer sets up Jenkins as a launch daemon, listening on port 8080. The launch daemon picks up the command line options from a standard preferences file, /Library/Preferences/org.jenkins-ci.plist If the fiel does not exist, built-in defaults are used. The preference files are manipulated using the standard utility defaults. To view all settings in the file, run: defaults read /Library/Preferences/org.jenkins-ciTo get the value of a single setting, run: defaults read /Library/Preferences/org.jenkins-ci SETTINGTo set the value of a setting, run:defaults write /Library/Preferences/org.jenkins-ci SETTING VALUEFor more information, see man defaults ##Supported Settings The list of settings supported by the Jenkins launch daemon(see document): 1.prefix2.httpPort3.httpListenAddress4.httpsPort5.httpsListenAddress6.ajp13Port7.ajp13ListenAddress Additionally, you can set also these: 1.war (Full path name to jenkins.war file)2.heapSize (Passed to java command-line -Xmx parameter)3.permGen (Passed to java command-line -XX:MaxPermSize parameter)(SINCE 1.455?)4.JENKINS_HOME(Full path to JENKINS_HOME directory where Jenkins keeps its files) ##Starting/stopping the service To manaully start the daemon: sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plistTo manually stop the daemon: sudo launchctl unload /Library.LauchDaemons/org.jenkins-ci.plist ##Starting/stopping the service 1.To manually start the daemon: sudo launchct1 load /Library/LaunchDaemons/org.jenkins-ci.plist2.To manully stop the darmon: sudo launchct1 unload /Library/LaunchDaemons/org.jenkins-ci.plist ##Inheriting your existing Hudson/Jenkins installation If you’d like your new installation to take over your existing Jenkins/Hudson data, copy your old data directory into the new JENKINNS_HOME directory. ##Java and OS X 10.9 Mavericks or 10.10 Yosemite Oracle Java 8 on Mavericks or Yosemite needs Apple’s Java 1.6 to funciton. However, all of the symlinks in /usr/bin point to Java 1.6, so when a Jenkins tries to run via /Library/Application/Support/Jenkins/jenkins-runner.sh, it launches using Java 1.6. To run under Java 8, you need to do the following: Install Apples’s Java from official websiteInstall Oracle Java 8Edit jenkins-runner.sh:a.Add the line: 1export JAVA_HOME=\"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home\" b.Change the last two lines to read:12echo \"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java\" $javaArgs -jar \"$war\" $argsexec \"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java\" $javaArgs -jar \"$war\" $args Jenkins will now run using Java 8. ##Uninstall jenkinsTo uninstall Jenkins service from your Mac OS X computer, execute uninstall script from terminal:1'/Library/Application Support/Jenkins/Uninstall.command'","categories":[],"tags":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"},{"name":"Original","slug":"Original","permalink":"http://yoursite.com/tags/Original/"}]},{"title":"Tag push and pull your image","slug":"Tag, push, and pll your image","date":"2016-07-17T06:46:23.000Z","updated":"2016-12-13T02:32:00.000Z","comments":true,"path":"2016/07/17/Tag, push, and pll your image/","link":"","permalink":"http://yoursite.com/2016/07/17/Tag, push, and pll your image/","excerpt":"In this section, you tag and push your docker-whale image to your newly created repository. When you are done, you test the repository by pulling your new image. #Step 1: Tag and push the imageIf you don’t already have a terminal open, open one now: 1.Go back to your conmand line terminal.2.At the prompt, type docker images to list the images you current have: 123456$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker-whale latest 7d9495d03763 38 minutes ago 273.7 MB &lt;none&gt; &lt;none&gt; 5dac217f722c 45 minutes ago 273.7 MB docker/whalesay latest fb434121fc77 4 hours ago 247 MB hello-world latest 91c95931e552 5 weeks ago 910 B 3.Find the IMAGE ID for your docker-whale image.","text":"In this section, you tag and push your docker-whale image to your newly created repository. When you are done, you test the repository by pulling your new image. #Step 1: Tag and push the imageIf you don’t already have a terminal open, open one now: 1.Go back to your conmand line terminal.2.At the prompt, type docker images to list the images you current have: 123456$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker-whale latest 7d9495d03763 38 minutes ago 273.7 MB &lt;none&gt; &lt;none&gt; 5dac217f722c 45 minutes ago 273.7 MB docker/whalesay latest fb434121fc77 4 hours ago 247 MB hello-world latest 91c95931e552 5 weeks ago 910 B 3.Find the IMAGE ID for your docker-whale image. In this example, the id is 7d9495d03763. 12345Notice that currently, the `REPOSITORY` shows the repo name `docker-whale`but not the namespace. You need to include the `namespace` for Docker Hub toassociate it with your account. The `namespace` is the same as your DockerHub account name. You need to rename the image to`YOUR_DOCKERHUB_NAME/docker-whale`. 1.Use IMAGE ID and the docker tag command to tag your docker-whale image. Of course, your account name will be your own. So, you type the command with your image’s ID and your account name and press RETURN.1$ docker tag 7d9495d03763 maryatdocker/docker-whale:latest 2.Type the docker images command again to see yur newly tygged image.1234567$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE maryatdocker/docker-whale latest 7d9495d03763 5 minutes ago 273.7 MB docker-whale latest 7d9495d03763 2 hours ago 273.7 MB &lt;none&gt; &lt;none&gt; 5dac217f722c 5 hours ago 273.7 MB docker/whalesay latest fb434121fc77 5 hours ago 247 MB hello-world latest 91c95931e552 5 weeks ago 910 B 3.Use the docker login command to log into the Docekr Hub from the command line. THe format for the login command is: 1docker login When prompted, enter yoru password and press enter. So, for example: 12345$ docker loginLogin with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.Username:Password:Login Succeeded 4.Type the docker push command to push your image to your new repository. 12345678910111213141516$ docker push maryatdocker/docker-whale The push refers to a repository maryatdocker/docker-whale(len: 1) 7d9495d03763: Image already exists c81071adeeb5: Image successfully pushed eb06e47a01d2: Image successfully pushed fb434121fc77: Image successfully pushed 5d5bd9951e26: Image successfully pushed 99da72cfe067: Image successfully pushed 1722f41ddcb5: Image successfully pushed 5b74edbcaa5b: Image successfully pushed 676c4a1897e6: Image successfully pushed 07f8e8c5e660: Image successfully pushed 37bea4ee0c81: Image successfully pushed a82efea989f9: Image successfully pushed e9e06b06e14c: Image successfully pushed Digest: sha256:ad89e88beb7dc73bf55d456e2c600e0a39dd6c9500d7cd8d1025626c4b985011 5.Return to your profile on Docker Hub to see your new image. #Step 2:Pull your new imageIn this last section, you’ll pull the image you just pushed to hub. Before you do that though, you will need to remove the original image from your local machine. If you left the original on your machine. Docker would not pull from the hub - why would it? The two images are identical. 1.Make sure Docker is running, and open a commmand line terminal.2.At the prompt, type docker images to list the images you current have on your local machine.1234567$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE maryatdocker/docker-whale latest 7d9495d03763 5 minutes ago 273.7 MB docker-whale latest 7d9495d03763 2 hours ago 273.7 MB &lt;none&gt; &lt;none&gt; 5dac217f722c 5 hours ago 273.7 MB docker/whalesay latest fb434121fc77 5 hours ago 247 MB hello-world latest 91c95931e552 5 weeks ago 910 B To make a good test, you need to remove the maryatdocker/docker-whale and docker-whale images from your local system. Removing them forces the next docker pull to get the image from your repository. 3.Use the docker rmi to remove the maryatdocker/docker-whale and docker-whale images. You can use an ID or the name to remove an image. 12$ docker rmi -f 7d9495d03763$ docker rmi -f docker-whale 4.Pull and load a new image from your repository using the docker run command. The command you type should include your username form Docker Hub. 1docker run yourusername/docker-whale Since the image is no longer available on your local system, Docker downliads it. 12345678910111213141516171819202122232425262728293031323334353637383940$ docker run maryatdocker/docker-whaleUnable to find image 'maryatdocker/docker-whale:latest' locallylatest: Pulling from maryatdocker/docker-whaleeb06e47a01d2: Pull completec81071adeeb5: Pull complete7d9495d03763: Already existse9e06b06e14c: Already existsa82efea989f9: Already exists37bea4ee0c81: Already exists07f8e8c5e660: Already exists676c4a1897e6: Already exists5b74edbcaa5b: Already exists1722f41ddcb5: Already exists99da72cfe067: Already exists5d5bd9951e26: Already existsfb434121fc77: Already existsDigest: sha256:ad89e88beb7dc73bf55d456e2c600e0a39dd6c9500d7cd8d1025626c4b985011Status: Downloaded newer image for maryatdocker/docker-whale:latest ________________________________________/ Having wandered helplessly into a \\| blinding snowstorm Sam was greatly || relieved to see a sturdy Saint Bernard || dog bounding toward him with the || traditional keg of brandy strapped to || his collar. || || \"At last,\" cried Sam, \"man's best |\\ friend -- and a great big dog, too!\" / ---------------------------------------- \\ \\ \\ ## . ## ## ## == ## ## ## ## === /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ === ~ &#123;~ ~ ~ ~ ~ / ===- ~~ \\____ o / \\ \\ __/ \\____\\______/ #Where to go nextYou’have done a lot, you’ve done all of the following fundamental Docker tasks. 1.installed Docker2.run a software image in a container3.located an interestng image on Docker Hub4.run the image on your own machine5.modified an image to create your own and run it6.create a Docker Hub account and repository7.pushed your image to Docker Hun for others to share.","categories":[],"tags":[{"name":"reprinted","slug":"reprinted","permalink":"http://yoursite.com/tags/reprinted/"},{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"}]},{"title":"Get Started with Docker","slug":"GetStartedWithDocker","date":"2016-07-15T03:29:41.000Z","updated":"2016-12-12T05:14:48.000Z","comments":true,"path":"2016/07/15/GetStartedWithDocker/","link":"","permalink":"http://yoursite.com/2016/07/15/GetStartedWithDocker/","excerpt":"This is a tutorial for non-technial users who are interested in learning more about Docker. By following thesesteps, you’ll learn fundamental Docker features while through some simple tasks. Depending on how you got here, you may or may not have already downloaded Docker for your platform and installed it. ##Get Docker?If you haven’t yet downloaded Docker for your platform or installed it, go to Get Docker.","text":"This is a tutorial for non-technial users who are interested in learning more about Docker. By following thesesteps, you’ll learn fundamental Docker features while through some simple tasks. Depending on how you got here, you may or may not have already downloaded Docker for your platform and installed it. ##Get Docker?If you haven’t yet downloaded Docker for your platform or installed it, go to Get Docker. ##Ready to start working with Docker?If you have already downloaded and installed Docker, you are ready to run Docker commands! Go to Verify your installation. #What you’ll learn and doYou will learn how to: 1.install Docker softwore for your platform2.run a software image in a container3.browse for an image on Docker Hub4.create your own image and run it in a container5.create a Docker Hub account and an image repository6.create an image of your own7.push your image to Docker Hub for others use The getting started was user tested to reduce the chance of users having problems. For the best chance of success, follow the steps as written the fiesttime before exploring on your own. It takes approximately 45 minutes to complete. ##Flavors of DockerThis tutorial is designed as a getting started with Docker, and works the same whether you are using Docker for Mac, Docker for Windows, Docker for Linux,or Docker ToolBox(for older MAc and Windows systems). If you are using Docker Toolbox, you can use the Docker Quickstart Terminal to run Docker commands in a prebackground, and you standard command line terminal is already set up to run Docker commands. ##How much command line savvy do I nedd?The getting started tour uses Docker Engine CLI commands entered on the command line of a terminal window. You don’t need to be a wizard at the command line, but you should be familiar with how to open your favorite shell or termanal, and run basic commands in that environment. It helps (but isn’t rquired)to konw how to navigate a directory tree, manipilate files, list running process, and so forth. ##Find and tun the whalesay imagePeople all over the world create Docker images. You can find these images by browsing the Docker Hub. In this next section, you’ll search for and find theimage you’ll use in the rest of this getting started. #Step 1: Locate the whalesay image1.Open your browser and browse to the Docker Hub.The Docker Hub contains images from individuals like you and official images from organizations like RedHat, IBM, Google, and a whole lot more. 2.Enter the word ‘whalesay’ in the search bar. 3.Click on the docker/whalesay image in the results.The browser displays the repository for the shalesay image. Each image repository contains information about an image. It should include information such as what kind of softwore the image contains and how to use it. You may notice that the whalesay image is based on l Linux distribution called Ubuntu. In the next step, you run the whalesay image on your machine. #step 2: Run the whalesay imageMake sure Docker is running. On Docker for Mac and Docker for Windows, this is indicated by the Docker whale showing in the status bar. 1.Open a command-line terminal 2.Type the ‘ docker run docker/whalesay/ cowsay boo ‘ command and press RETURN This command runs the whalesay image in a container. Your terminal should look like the following: 1234567891011121314151617181920212223242526272829303132333435363738394041 $ docker run docker/whalesay cowsay boo Unable to find image 'docker/whalesay:latest' locally latest: Pulling from docker/whalesay e9e06b06e14c: Pull complete a82efea989f9: Pull complete 37bea4ee0c81: Pull complete 07f8e8c5e660: Pull complete 676c4a1897e6: Pull complete 5b74edbcaa5b: Pull complete 1722f41ddcb5: Pull complete 99da72cfe067: Pull complete 5d5bd9951e26: Pull complete fb434121fc77: Already exists Digest: sha256:d6ee73f978a366cf97974115abe9c4099ed59c6f75c23d03c64446bb9cd49163 Status: Downloaded newer image for docker/whalesay:latest _____ &lt; boo &gt; ----- \\ \\ \\ ## . ## ## ## == ## ## ## ## === /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ === ~ &#123;~ ~ ~ ~ ~ / ===- ~~ \\____ o / \\ \\ __/ \\____\\______/``` The first time you run a software image, the docker command looks for it on your local system. If the image isn't there, then docker getsit from the hub.3.While still in the command line terminal, type docker images command and press RETURN. The command lists all the images on your local system.You should see docker/whalesay in the list.```bash$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker/whalesay latest fb434121fc77 3 hours ago 247 MB hello-world latest 91c95931e552 5 weeks ago 910 B When you run an image in a container, Docker downloads the image to your computer. This local copy of the image saves your time. Docker only downloads the image again if the image’s source changes on the hub. You can, of course, delete the image yourself. You’ll learrn more about that later. Let’s leave the image there for now because we are going to use it later. 4.Take a moment to play with the whalesay container a bit. Try running the whalesay image again with a word or phrase. Try a long or short phrase. Can you break the cow? 123456789101112131415$ docker run docker/whalesay cowsay boo-boo _________&lt; boo-boo &gt; --------- \\ \\ \\ ## . ## ## ## == ## ## ## ## === /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ === ~ &#123;~ ~ ~ ~ ~ / ===- ~~ \\____ o / \\ \\ __/ \\____\\______/ ##Build your own imageThe whalesay image could be improved. It could be nice if you didn’t have to think of something to say. And you type a lot of to get whalesay to talk.1docker run docker/whalesay/ cowsay boo-boo In this next section, you will improve the whalesay image by building a new version that “talks on its own” and requires fewer words to run. #step 1: Write a DockerfileIn this step, you use your favorite text editor to write a short Dockerfile. A Dockerfile describes the software that is “backed” into the image. It isn’tjust ingredients thought, it can tell the software what enviroment to use or what commands to run. Your recipe is going to be very short. 1.Go back to your command terminal window.2.Make a new directory by typing ‘ mkdir mydockerbuild ‘ and pressing RETURN.1$ mkdir mydockerbuild This directory serves as the “context” for your build. The context just means it contains all the things you need to build your image.3.change to your new directory.1cd mydockerbuild Right now the directory is empty.4.Create Dockerfile in the directory by typing ‘touch Dockerfile’ and pressing RETURN.1touch Dockerfile The command appears to do nothing but it actually creates the Dockerfile in the current directory. Just type ‘ls’ to see it.12$ lsDockerfile 5.Open the Dockerfile in a visual text editor like Atom or Submit, or a text based editor like vi, or nano.6.Add a line to the file like this:1FROM docker/whalesay:lastest The FROM keyword tells Docker which image your image is based on. Whalesay is cute and has the cowsay problem already, so we’ll start there.7.Now, add the fortunes problems to the image.1RUN apt-get -y update &amp;&amp; apt-get install -y fortunes The fortunes program has a command that prints out wise sayings for our whale to say. So the first step is to install it. This line install thesoftware into the image.8.Once the image has the softwore it needs, you instruct the softwore to run when the image is loaded.1CMD /usr/games/fortune -a | cowsay This line tells the fortune pogram to pass a nifty quote to the cowsay program.9.Check your work, your file should look like this:123FROM docker/whalesay:latestRUN apt-get -y update &amp;&amp; apt-get install -y fortunesCMD /usr/games/fortune -a | cowsay 10.Save and close your DockerfileAt this point, you have all your softwore ingredients and behaviors described in a Dockerfile. You are ready to build a new image. #step 2:Build an image from your Dockerfile1.At the command line, make sure the Dockerfile is in the current directory bu typing cat Dockerfile. 123456$ cat DockerfileFROM docker/whalesay:latestRUN apt-get -y update &amp;&amp; apt-get install -y fortunesCMD /usr/games/fortune -a | cowsay 2.Now, build your new image by typing the ‘docker build -t docker-whale’ command in your terminal(don’t forget the .period). 12345$ docker build -t docker-ehaleSending build context to Docker daemon 2.048 kB...snip...Removing intermediate container a8r6faa88df3successful build 7d9495d03763 The command takes several seconds to run and reports its outcome. Before you do anything with the new image, take a minute to learn about the DOckerfile build process. #step 3:Learn about the build processThe docker build -t docker-whale command takes the Dockerfile in the current directory, and builds an image called docker-whale on your local machine. The command takes about a minute and its output looks really long and complex. In this section, you learn what each message means. First Docker checks to make sure it has everything it needs to build.1Sending build context to Docker daemon 2.048 kB Then, Docker loads with the whalesay image. It already has this image locally as you might recall from the last page. So, Docker doesn’t need to download it.12Step 1: From docker/whalesay:latest ---&gt; fb434121fc77 Docker moves onto the next step which is to update the apt-get package manager. This takes a lot of lines, no need to list them all again here.12345678910111213141516171819202122232425262728293031Step 2: RUN apt-get -y update &amp;&amp; apt-get install -y fortunes ---&gt; Running in 27d224dfa5b2 Ign http://archive.ububtu.com trusty InRelease Ign http://archive.ubuntu.com trusty-updates InRelease Ign http://archive.ubuntu.com trust-security Inrelease Hit http://archive.ubuntu.com trusty Release.apg ....snip... Get:15 http://archive.ubuntu.com trusty-security/restricted amd64 Packegs [14.8 kB] Get:16 http://archive.ubuntu.com trusty-security/universe amd64 Packeges [134 kB] Reading packegs lists... ---&gt; eb06e47a01d2 Then, Docker install the new fortunes software. ```bash Reading packegs lists... Building dependency tree... Reading state information... The following extra packegs will be installed: fortune-mod fortunes-min librecode0Suggested packegs: x11-utils bsdmainutilsThe following NEW packegs will be installed: fortune-mod fortunes fortunes-min librecode00 upgraded, 4 newly installed, 0 to remove and 3 not upgraded.Need to get 1961 kB of archives.After this operation, 4817 kB of additional disk space will be used.Get:1 http://archive.ubuntu.com/ubuntu/trusty/main librecode0 amd64 3.6-21 [771 kB]...snip....Setting up fortunes (1:1.99.1-7)Processing triggers for libc-bin (2.19-0ubuntu6.6)... ---&gt; c81071adeeb5Removing intermediate container 23aa52c1987c Finally. Docker finishes the build and reports its outcome.12345Step 3: CMD /usr/games/fortune -a | cowsay ---&gt; Running in a8e6faa88df3 ---&gt; 7d9495d03763Removing intermediate container a8e6faa88df3Successfully build 7d9495d03763 #Step 4:Run your new docker-whaleIn this step, you verify the new images is on your computer and then you run your new image. 1.Open a command line terminal.2.Type docker images and press RETURN. This command, you might remember, lists the images you have locally.12345$ docker imagesREPOSITORY TAG IMAGE ID CREATED SIZEdocker-whale latest 7d9495d03763 4 minutes ago 273.7 MBdocker-whalesay latest fb434121fc77 4 minutes ago 247 MBhello-world latest 91c95931e552 4 minutes ago 910 b 3.Run your new image by typing ‘docker run docker-whale’ and pressing RETURN.12345678910111213141516$ docker run docker-whale _________________________________________ / \"He was a modest, good-humored boy. It \\ \\ was Oxford that made him insufferable.\" / ----------------------------------------- \\ \\ \\ ## . ## ## ## == ## ## ## ## === /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ === ~ &#123;~ ~ ~ ~ ~ / ===- ~~ \\____ o / \\ \\ __/ \\____\\______/ As you can see, you’ve made the whale a lot smarter. It finds its own things to say and the cammand line is a lot shorter! You may also notice that Docker didn’t have to download anything.That is because the image was build locally and is already available. #Where to go nextOn this page, you learned to build an image bu writing yout own Dockerfile. You ran your image in a cotainer. You also just used Linux from your Mac yes again. In the next section, you take the first step in sharing your image by creating a Docker Hub account.","categories":[],"tags":[{"name":"reprinted","slug":"reprinted","permalink":"http://yoursite.com/tags/reprinted/"},{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"}]},{"title":"Docker for Mac vs. Docker Toolbox","slug":"DockerForMac","date":"2016-07-13T07:34:12.000Z","updated":"2016-12-08T05:18:24.000Z","comments":true,"path":"2016/07/13/DockerForMac/","link":"","permalink":"http://yoursite.com/2016/07/13/DockerForMac/","excerpt":"If you already have an installation of Docker Toolbox, please read these topics first to learnhow Docker for Mac and Docker Toolbox differ, and how they can coexist. ###The Docker Toolbox environment","text":"If you already have an installation of Docker Toolbox, please read these topics first to learnhow Docker for Mac and Docker Toolbox differ, and how they can coexist. ###The Docker Toolbox environment Docker Toolbox installs docker, docker-compose and docker-machine in /usr/local/bin on your Mac.It also installs VirtualBox. At installation time, Toolbox uses docker-machine to provision a VirtualBoxVM called default, running the boot2docker Linux distribution, with Docker Engine with certificates locatedon your Mac at $HOME/.docker/machine/machines.default. Before you use docker or docker-compose on your Mac, you typically use the command eval $(docker-machine env default)to set environment variables so that docker or docker-compose know how to talk to Docker Engine running on VirtuaBox. ###The Docker for Mac environment Docker for Mac is a native application, that you install in /Applications. At installation time, it creats symlinksin /usr/local/bin for docker-compose, to the version of the commands inside the Mac application bundle, in /Applications/Docker.app/Contents/Resources/bin. Here are some key points to know about Docker for Mac before you get started: 1.Docker for Mac does not use VirtualBox, but rather HyperKit, a lightweightmacOS virtualization solutin build on top of Hypervisor.framework in macOS 10.10 Yosemite and higher. 2.Installing Docker for Mac does not affect machines you create with Docker Machine. The install offers to copy containersand images from your local default machine (if one exists) to the new Docker for Mac HyperKit VM. If chosen, content fromdefault is copied to the new Docker for Mac HyperKit VM, and your original default machine is kept as is. 3.The Docker for Mac application does not use docker-machine to provision that VM; but rather creates and manages it directly. 4.At installation time, Docker for Mac provisions an HyperKit VM based on Alpine Linux, running Docker Engine. It exposes thedocker API on a socket in /var/tmp/docker.sock. Since this is the default location where docker will look if no ecvironmentvariables are set, you can start using docker and docker-compose without setting any environment variables. With Docker for Mac, you can get only one VM, and you don’t manage it. It is managed by the Docker for Mac application, whichincludes autoupdate to update the client and server versions of Docker. If you need several VMs and want to manage the version of the Docker client or server you are using, you can continue to use docker-machine,on the same machine, as described in Docker Toolbox and Docker for Mac coexitence. ###Setting up to run Docker for Mac 1.Check whether Toolbox DOCKER environment variable are set: 12345$ env | grep DOCKERDOCKER_HOST=tccp://192.168.99.100:2376DOCKER_MACHINE_NAME=defaultDOCKER_TLS_VERIFY=1DOCKER_CERT_PATH=/Users/victoriabialas/.docker/machine/machines/default If this command returns no output, you are ready to use Docker for Mac.If it return output(as show in the example), you need to unset the DOCKER environment variablesto make the client talk the Docker for Mac Engine(next step). 2.Run the unset command on the following DOCKER environment variables to unset them in the current shell. 1234unset DOCKER_TLS_VERIFYunset DOCKER_CERT_PATHunset DOCKER_MACHINE_NAMEunset DOCKER_HOST Now, this command should return no output1$ env | grep DOCKER If you are using a Bash shell, you can use ‘unset ${!DOCKER_*}’ to unset all DOCKER environmentvariables at once.(This will not work in other shells such as .zsh; you will need to each variable individually) Note: If you have a shell script as part of your profile that sets these DOCKER environment variables automatically each time you open a command window, then you will need to unset theseeach time you want to use Docker for Mac. Warning: If you install Docker for Mac on a machine where Docker Toolbox is installed, it will replace the docker and docker-compose conmand lines in /usr/local/bin with symlinks to its own versions. ###Docker Toolbox and Docker for Mac coexistenceYou can use Docker for Mac and Docker Toolbox together on the sanme machine. When you want to use Docker for Mac, make sure all DOCKER environment variables are unset. You can do this bash with unset ${!DOCKER_*}. When you want to use one of the VirtualBox VMs you have set with docker-machine, just run a eval $(docker-machine env default) (or the name if the machine you want to target). This will switch the current command shell to talk to the specified Toolbox machine. ###Using different versions of Docker toolsThe coexistence setup works ad is as long as your VirtualBox VMs provisioned with docker-machine run the same version of Docker Engine as Docker for Mac. If you need to user VMs running older versions of Docker Engine, you can use a tool like Docker Version Manager to manage several version of docker client. ###How do I uninstall Docker ToolboxYou might decide that you do not need Toolbox now that you have Docker for Mac, and want to uninstall it. For details on how to perform a clean uninstall of Toolbox on the Mac, see How to uninstall Toolbox in the Toolbox Mac topics. Reprinted links：https://docs.docker.com/docker-for-mac/docker-toolbox/","categories":[],"tags":[{"name":"reprinted","slug":"reprinted","permalink":"http://yoursite.com/tags/reprinted/"},{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"}]},{"title":"Use Mitmproxy to get the data packets","slug":"Mitmproxy","date":"2016-06-20T05:02:32.000Z","updated":"2016-12-01T08:29:52.000Z","comments":true,"path":"2016/06/20/Mitmproxy/","link":"","permalink":"http://yoursite.com/2016/06/20/Mitmproxy/","excerpt":"Today we introduce a good tool for capturing data packets, it’s Mitmproxy.Mitmproxy is an interactive command-line capture tool. It can capture packets and view http and http requests, In addition to view https request it also can intercept and modify the request and response.Let’s use Mitmproxy in a practical example. ##Install","text":"Today we introduce a good tool for capturing data packets, it’s Mitmproxy.Mitmproxy is an interactive command-line capture tool. It can capture packets and view http and http requests, In addition to view https request it also can intercept and modify the request and response.Let’s use Mitmproxy in a practical example. ##Install Mitmproxy official website introduced with the following order to install: 1pip install mitmproxy The actual installation process in my system (macOS Sierra) appeared six module dependency error,specific discussion can be seen here.Another problem is the permission error that occurs during the installation process.So finally I’m using the following command to install Mitmproxy: 1sudo pip install mitmproxy --ignore-installed six ##Start using First of all, we need mobile phones and computers to connect in the same WiFi environment, then weenter the mobile phone Setting -&gt; WLAN, click on the currently connected wifi to enter the detailed settings interface, click manual settings in the http proxy. Fill in the ip address in the server column, ip address through the command ‘ifconfig’ in the computer terminal to get. The port is filled with 8080, then save the settings. After that we can begin to capture the package. Open the terminal input ‘mitmproxy-p 8080’ into the capture packet interface. Now we can only crawl http package. If we want to catch the https package, we also need to do some settings on the phone. Open the Safari browser with iPhone and enter ‘mitm. It’, select the mobile phone of the current system on the site, install the appropriate certificate, we can crawl the https package. Take Pandamen as an example. We use safari to open the Pandamen on the iPhone. We can see the request for pandamen in the previously opened terminal, we use the up and down keys to select, enter key to view the details, use the Tab key to toggle the top navigation bar and the Q key to exit the detailed interface. In the request, response and detail we can see a lot of interesting information. We use Mitmproxy to capture packets in the mobile test of the Special test. We can see the size of the calling API and the time spent, And other points we are interested in: Whether the returned image is compressed. The size of CSS, JS, png in the html. Whether the business scenario invoking the redundant API. Whether in the weakness network the API has been repeated invoking. …. ##Request to intercept In addition to these conventional operations, Mitmproxy also has another powerful function: Intercept modification Request and Response. Enter i in the terminal, then enter ~s and press Enter, we entered the response intercept mode. If we enter~q and we just entered the request intercept mode. More commands we can enter ‘?’ To view. An orange request means being intercepted, then we press the Enter and enter e that we can modify the request or response, after modify we press ‘a’ to release the request, if we want to release all the request just to input A. We can also read the relevant documents in the official website.","categories":[],"tags":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"},{"name":"Original","slug":"Original","permalink":"http://yoursite.com/tags/Original/"}]},{"title":"What is unittest and how to write unit testing","slug":"Unittest","date":"2016-05-29T13:32:46.000Z","updated":"2016-12-01T08:19:54.000Z","comments":true,"path":"2016/05/29/Unittest/","link":"","permalink":"http://yoursite.com/2016/05/29/Unittest/","excerpt":"Unit test is used for a module, a function or a class to test their validity.We can write some test case for function abs() to test the validity of it: 1.Input a positive number: 1, 3.2 or 0.6. We expect the return value to be the same as the input. 2.Input a negative number: -1, -2,3 or -0.99. We expect the return value to be the opposite of the input. 3.Input 0. We expect to return 0.","text":"Unit test is used for a module, a function or a class to test their validity.We can write some test case for function abs() to test the validity of it: 1.Input a positive number: 1, 3.2 or 0.6. We expect the return value to be the same as the input. 2.Input a negative number: -1, -2,3 or -0.99. We expect the return value to be the opposite of the input. 3.Input 0. We expect to return 0. 4.Input non-numeric types, such as None, [], {}. We expect a TypeError to be thrown. We put the above test cases into a test module, it’s a complete unit test.If the unit test can be passed, which means that we tested this function to work properly.If the unit test does not pass, either the function has a bug, or the test condition is not entered correctly, we need fixes it to make unit tests pass. What are the benefits of unit testing? Imagine if we modified the abs () source code, we only need to run the unit tests again, if the test passed it means our changes to the abs () function does not affect the original behavior. If the test does not pass, it means that our changes have problems, we need to modify the code or modify the test. Next, we actually write code to illustrate the unit test. abs.py123456789def abs(x): if not isinstance(x, (int, float)): raise TypeError('bad operand type') if x &gt;= 0: return x else: return -x This is a python file, which defines an abs () function that takes an absolute value. Open Terminal, cd into the folder where the abs.py file is located. Input python and press Enter to enter python’s interactive programming environment：123456$ cd /Users/hisoft/Desktop/Unittest$ pythonPython 2.7.11 (default, Jan 22 2016, 08:29:18) [GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwinType \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; Now imput the ‘import abs’ on the Termanal and press to enters the module name abs there.We use abs.abs (-5) to invoking the function in the module to find the absolute value of -5.This part of the python can refer to the official documents.123&gt;&gt;&gt; import abs&gt;&gt;&gt; abs.abs(-5)5 abs_test.pyNow let’s write the unit test for the abs function. We use the Python’s unittest module, abs_test.py is like this:12345678910111213141516171819202122232425import unittestfrom abs import absclass UnitTestDemo(unittest.TestCase): def setup(self): print('setUp...') def tearDown(self): print ('tearDoen...') def test_case1(self): self.assertEqual(abs(1), 1) self.assertEqual(abs(-1), 1) self.assertEqual(abs(0), 0) def test_case2(self): with self.assertRaises(TypeError): abs('1') if __name__ == '__main__': unittest.main() We need to write a test class When we write unit tests, This is inherited from ‘unittest.TestCase’.The test method begins with test, There are test_case1 and test_case2. A method that does not start with test is not considered a test method and will not be executed when tested. ##Run the unit testNow we can run unit tests. To the end of the abs_test.py with two lines of code：12if __name__ == '__main__': unittest.main() The two lines of code means that this script has been completed，we can run it directly：1python abs_test.py There are two methods in the unit test script setUp() and tearDown(), They will invoking before and after each test method execute.","categories":[],"tags":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/tags/Technology/"},{"name":"Original","slug":"Original","permalink":"http://yoursite.com/tags/Original/"}]},{"title":"Welcome to my blog","slug":"hello-world","date":"2016-05-26T12:46:25.000Z","updated":"2016-12-01T08:19:52.000Z","comments":true,"path":"2016/05/26/hello-world/","link":"","permalink":"http://yoursite.com/2016/05/26/hello-world/","excerpt":"","text":"Welcome to Lee! This is my blog where I share my articals about code and sometimes I will put some articles I interested here. I would like to improve my English so some articles will be written in English. It’s my Github Account, I put my open source code here. Welcome to contact me by E-mail: nanjun@linanjun.cn","categories":[{"name":"Life","slug":"Life","permalink":"http://yoursite.com/categories/Life/"}],"tags":[]}]}